services:
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: goal-tracker-frontend
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - BACKEND_URL=http://backend:8080
    volumes:
      - ../frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - goal-tracker-network
    restart: unless-stopped

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: goal-tracker-backend
    ports:
      - "8080:8080"
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=goalsdb
      - SSL=disable
      - PORT=8080
    depends_on:
      - postgres
    networks:
      - goal-tracker-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: goal-tracker-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=goalsdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - goal-tracker-network
    restart: unless-stopped



networks:
  goal-tracker-network:
    driver: bridge

volumes:
  postgres-data: